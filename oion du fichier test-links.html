warning: in the working copy of '.gitignore', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'build.js', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'deploy-vercel.ps1', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'emailjs-config.js', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'index.html', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'legal-notice.html', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'main.js', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'package.json', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'portfolio.html', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'privacy-policy.html', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'vercel.json', LF will be replaced by CRLF the next time Git touches it
[1mdiff --git a/.gitignore b/.gitignore[m
[1mindex 5f3a358..7a25bd4 100644[m
[1m--- a/.gitignore[m
[1m+++ b/.gitignore[m
[36m@@ -60,4 +60,3 @@[m [mjspm_packages/[m
 [m
 # Yarn Integrity file[m
 .yarn-integrity[m
[31m-.vercel[m
[1mdiff --git a/build.js b/build.js[m
[1mindex 161eea3..f35e88b 100644[m
[1m--- a/build.js[m
[1m+++ b/build.js[m
[36m@@ -9,83 +9,11 @@[m [mconst __dirname = path.dirname(__filename);[m
 [m
 console.log('üöÄ WebcomFactory - Build de production...\n');[m
 [m
[31m-// Cr√©er le dossier dist s'il n'existe pas[m
[32m+[m[32m// V√©rifier que le dossier dist existe[m
 const distDir = path.join(__dirname, 'dist');[m
 if (!fs.existsSync(distDir)) {[m
[31m-  fs.mkdirSync(distDir, { recursive: true });[m
[31m-  console.log('üìÅ Dossier dist cr√©√©');[m
[31m-}[m
[31m-[m
[31m-// Copier tous les fichiers HTML, CSS, JS et assets[m
[31m-const sourceFiles = [[m
[31m-  'index.html',[m
[31m-  'portfolio.html', [m
[31m-  'privacy-policy.html',[m
[31m-  'legal-notice.html',[m
[31m-  'style.css',[m
[31m-  'main.js',[m
[31m-  'sitemap.xml',[m
[31m-  'robots.txt'[m
[31m-];[m
[31m-[m
[31m-console.log('üìÑ Copie des fichiers principaux...');[m
[31m-sourceFiles.forEach(file => {[m
[31m-  const sourcePath = path.join(__dirname, file);[m
[31m-  const destPath = path.join(distDir, file);[m
[31m-  [m
[31m-  if (fs.existsSync(sourcePath)) {[m
[31m-    fs.copyFileSync(sourcePath, destPath);[m
[31m-    console.log(`‚úÖ ${file} copi√©`);[m
[31m-  } else {[m
[31m-    console.log(`‚ö†Ô∏è  ${file} non trouv√©, ignor√©`);[m
[31m-  }[m
[31m-});[m
[31m-[m
[31m-// Copier les dossiers d'assets[m
[31m-const assetFolders = ['logo-webcom-icon.png', 'logo-webcom.png', 'hero.png'];[m
[31m-console.log('üñºÔ∏è  Copie des images...');[m
[31m-assetFolders.forEach(asset => {[m
[31m-  const sourcePath = path.join(__dirname, asset);[m
[31m-  const destPath = path.join(distDir, asset);[m
[31m-  [m
[31m-  if (fs.existsSync(sourcePath)) {[m
[31m-    fs.copyFileSync(sourcePath, destPath);[m
[31m-    console.log(`‚úÖ ${asset} copi√©`);[m
[31m-  }[m
[31m-});[m
[31m-[m
[31m-// Copier le dossier outils[m
[31m-const outilsDir = path.join(__dirname, 'outils');[m
[31m-const outilsDestDir = path.join(distDir, 'outils');[m
[31m-if (fs.existsSync(outilsDir)) {[m
[31m-  if (!fs.existsSync(outilsDestDir)) {[m
[31m-    fs.mkdirSync(outilsDestDir, { recursive: true });[m
[31m-  }[m
[31m-  [m
[31m-  const outilsFiles = fs.readdirSync(outilsDir);[m
[31m-  outilsFiles.forEach(file => {[m
[31m-    const sourcePath = path.join(outilsDir, file);[m
[31m-    const destPath = path.join(outilsDestDir, file);[m
[31m-    fs.copyFileSync(sourcePath, destPath);[m
[31m-  });[m
[31m-  console.log(`‚úÖ Dossier outils copi√© (${outilsFiles.length} fichiers)`);[m
[31m-}[m
[31m-[m
[31m-// Copier le dossier portfolio[m
[31m-const portfolioDir = path.join(__dirname, 'portfolio');[m
[31m-const portfolioDestDir = path.join(distDir, 'portfolio');[m
[31m-if (fs.existsSync(portfolioDir)) {[m
[31m-  if (!fs.existsSync(portfolioDestDir)) {[m
[31m-    fs.mkdirSync(portfolioDestDir, { recursive: true });[m
[31m-  }[m
[31m-  [m
[31m-  const portfolioFiles = fs.readdirSync(portfolioDir);[m
[31m-  portfolioFiles.forEach(file => {[m
[31m-    const sourcePath = path.join(portfolioDir, file);[m
[31m-    const destPath = path.join(portfolioDestDir, file);[m
[31m-    fs.copyFileSync(sourcePath, destPath);[m
[31m-  });[m
[31m-  console.log(`‚úÖ Dossier portfolio copi√© (${portfolioFiles.length} fichiers)`);[m
[32m+[m[32m  console.log('‚ùå Dossier dist non trouv√©. Ex√©cutez d\'abord: npm run build');[m
[32m+[m[32m  process.exit(1);[m
 }[m
 [m
 console.log('‚úÖ Build Vite termin√© avec succ√®s');[m
[1mdiff --git a/deploy-vercel.ps1 b/deploy-vercel.ps1[m
[1mindex 4907285..fc5769a 100644[m
[1m--- a/deploy-vercel.ps1[m
[1m+++ b/deploy-vercel.ps1[m
[36m@@ -1,42 +1,51 @@[m
 # Script de d√©ploiement Vercel pour WebcomFactory[m
[31m-# Ex√©cutez ce script depuis PowerShell[m
[32m+[m[32m# Utilisation: .\deploy-vercel.ps1[m
 [m
[31m-Write-Host "üöÄ D√©ploiement WebcomFactory sur Vercel..." -ForegroundColor Green[m
[32m+[m[32mWrite-Host "üöÄ D√©ploiement WebcomFactory sur Vercel" -ForegroundColor Green[m
[32m+[m[32mWrite-Host "=========================================" -ForegroundColor Green[m
 [m
[31m-# V√©rifier si Vercel CLI est install√©[m
[32m+[m[32m# V√©rifier que Vercel CLI est install√©[m
 try {[m
     $vercelVersion = vercel --version[m
     Write-Host "‚úÖ Vercel CLI d√©tect√©: $vercelVersion" -ForegroundColor Green[m
 } catch {[m
[31m-    Write-Host "‚ùå Vercel CLI non install√©. Installation..." -ForegroundColor Yellow[m
[32m+[m[32m    Write-Host "‚ùå Vercel CLI non install√©. Installation..." -ForegroundColor Red[m
     npm install -g vercel[m
 }[m
 [m
[31m-# Nettoyer le cache et les modules[m
[31m-Write-Host "üßπ Nettoyage du cache..." -ForegroundColor Blue[m
[31m-Remove-Item -Recurse -Force node_modules -ErrorAction SilentlyContinue[m
[31m-Remove-Item -Recurse -Force dist -ErrorAction SilentlyContinue[m
[31m-Remove-Item -Force package-lock.json -ErrorAction SilentlyContinue[m
[32m+[m[32m# Nettoyer les builds pr√©c√©dents[m
[32m+[m[32mWrite-Host "üßπ Nettoyage des builds pr√©c√©dents..." -ForegroundColor Yellow[m
[32m+[m[32mif (Test-Path "dist") {[m
[32m+[m[32m    Remove-Item -Recurse -Force "dist"[m
[32m+[m[32m    Write-Host "‚úÖ Dossier dist supprim√©" -ForegroundColor Green[m
[32m+[m[32m}[m
 [m
[31m-# Installer les d√©pendances[m
[31m-Write-Host "üì¶ Installation des d√©pendances..." -ForegroundColor Blue[m
[32m+[m[32m# Installation des d√©pendances[m
[32m+[m[32mWrite-Host "üì¶ Installation des d√©pendances..." -ForegroundColor Yellow[m
 npm install[m
 [m
 # Build de production[m
[31m-Write-Host "üî® Build de production..." -ForegroundColor Blue[m
[32m+[m[32mWrite-Host "üî® Build de production..." -ForegroundColor Yellow[m
 npm run build:prod[m
 [m
 # V√©rifier que le build a r√©ussi[m
 if (Test-Path "dist") {[m
[31m-    Write-Host "‚úÖ Build r√©ussi !" -ForegroundColor Green[m
[31m-    [m
[31m-    # D√©ployer sur Vercel[m
[31m-    Write-Host "üöÄ D√©ploiement sur Vercel..." -ForegroundColor Blue[m
[31m-    vercel --prod[m
[31m-    [m
[31m-    Write-Host "üéâ D√©ploiement termin√© !" -ForegroundColor Green[m
[31m-    Write-Host "üåê V√©rifiez votre site sur Vercel" -ForegroundColor Cyan[m
[32m+[m[32m    Write-Host "‚úÖ Build r√©ussi dans le dossier dist" -ForegroundColor Green[m
 } else {[m
[31m-    Write-Host "‚ùå √âchec du build !" -ForegroundColor Red[m
[32m+[m[32m    Write-Host "‚ùå √âchec du build" -ForegroundColor Red[m
     exit 1[m
 }[m
[32m+[m
[32m+[m[32m# D√©ploiement sur Vercel[m
[32m+[m[32mWrite-Host "üöÄ D√©ploie