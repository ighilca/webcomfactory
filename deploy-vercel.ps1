# Script de d√©ploiement Vercel pour WebcomFactory
# Utilisation: .\deploy-vercel.ps1

Write-Host "üöÄ D√©ploiement WebcomFactory sur Vercel" -ForegroundColor Green
Write-Host "=========================================" -ForegroundColor Green

# V√©rifier que Vercel CLI est install√©
try {
    $vercelVersion = vercel --version
    Write-Host "‚úÖ Vercel CLI d√©tect√©: $vercelVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Vercel CLI non install√©. Installation..." -ForegroundColor Red
    npm install -g vercel
}

# Nettoyer les builds pr√©c√©dents
Write-Host "üßπ Nettoyage des builds pr√©c√©dents..." -ForegroundColor Yellow
if (Test-Path "dist") {
    Remove-Item -Recurse -Force "dist"
    Write-Host "‚úÖ Dossier dist supprim√©" -ForegroundColor Green
}

# Installation des d√©pendances
Write-Host "üì¶ Installation des d√©pendances..." -ForegroundColor Yellow
npm install

# Build de production
Write-Host "üî® Build de production..." -ForegroundColor Yellow
npm run build:prod

# V√©rifier que le build a r√©ussi
if (Test-Path "dist") {
    Write-Host "‚úÖ Build r√©ussi dans le dossier dist" -ForegroundColor Green
} else {
    Write-Host "‚ùå √âchec du build" -ForegroundColor Red
    exit 1
}

# D√©ploiement sur Vercel
Write-Host "üöÄ D√©ploiement sur Vercel..." -ForegroundColor Yellow
Write-Host "‚ö†Ô∏è  Assurez-vous d'√™tre connect√© √† Vercel (vercel login)" -ForegroundColor Yellow

# Demander confirmation
$confirmation = Read-Host "Continuer le d√©ploiement ? (y/N)"
if ($confirmation -eq "y" -or $confirmation -eq "Y") {
    vercel --prod
} else {
    Write-Host "‚ùå D√©ploiement annul√©" -ForegroundColor Red
}

Write-Host "‚úÖ Script termin√©" -ForegroundColor Green
